<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0123.2221                               -->
<workbook original-version='18.1' source-build='2018.3.3 (20183.19.0123.2221)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1yuteoo1c2r2r31gtiqyg1vqkczj'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transactions].[product_code]' />
              <expression op='[products].[product_code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions].[market_code]' />
                <expression op='[markets].[markets_code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[transactions].[order_date]' />
                  <expression op='[date].[date]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions].[customer_code]' />
                    <expression op='[customers].[customer_code]' />
                  </expression>
                </clause>
                <relation connection='mysql.1yuteoo1c2r2r31gtiqyg1vqkczj' name='transactions' table='[transactions]' type='table' />
                <relation connection='mysql.1yuteoo1c2r2r31gtiqyg1vqkczj' name='customers' table='[customers]' type='table' />
              </relation>
              <relation connection='mysql.1yuteoo1c2r2r31gtiqyg1vqkczj' name='date' table='[date]' type='table' />
            </relation>
            <relation connection='mysql.1yuteoo1c2r2r31gtiqyg1vqkczj' name='markets' table='[markets]' type='table' />
          </relation>
          <relation connection='mysql.1yuteoo1c2r2r31gtiqyg1vqkczj' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalised amount' datatype='real' name='[Calculation_985725395562323968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If [currency]== &apos;USD&apos; THEN [sales_amount]*73.25 ELSE&#13;&#10;[sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Code (Products))' hidden='true' name='[Action (Product Code (Products))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_code (products)]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.752672' measure-ordering='alphabetic' measure-percentage='0.247328' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Oman&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='customer_code (customers)' />
        <field-sort-custom-order field='custmer_name' />
        <field-sort-custom-order field='customer_type' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='cy_date' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_name' />
        <field-sort-custom-order field='date_yy_mmm' />
        <field-sort-custom-order field='markets_code' />
        <field-sort-custom-order field='markets_name' />
        <field-sort-custom-order field='zone' />
        <field-sort-custom-order field='product_code (products)' />
        <field-sort-custom-order field='product_type' />
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_985725395562323968' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter from='&quot;Mark001&quot;' function='range' level='[markets_code]' to='&quot;Mark015&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales quantity by market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 customer' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 product' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_985725395572977665]' derivation='None' name='[none:Calculation_985725395572977665:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='6' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[mn:cy_date:ok]' value='#f28e2b' />
            <format attr='color' data-class='total' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[mn:cy_date:ok]' value='#59a14f' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:Calculation_985725395572977665:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[mn:cy_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:sales_qty:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#499894' fontsize='18'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#499894' fontsize='18'>&lt;[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:sales_qty:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Normalised amount' datatype='real' name='[Calculation_985725395562323968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='If [currency]== &apos;USD&apos; THEN [sales_amount]*73.25 ELSE&#13;&#10;[sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_985725395562323968]' derivation='Sum' name='[sum:Calculation_985725395562323968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='283' />
            <format attr='height' value='98' />
            <format attr='color' value='#333333' />
            <format attr='text-format' data-class='subtotal' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' value='c0,,.00M;(0,,.00M)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#499894' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#499894' fontsize='18'>&lt;[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Revenue by market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Normalised amount' datatype='real' name='[Calculation_985725395562323968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='If [currency]== &apos;USD&apos; THEN [sales_amount]*73.25 ELSE&#13;&#10;[sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_985725395562323968]' derivation='Sum' name='[sum:Calculation_985725395562323968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:markets_name:nk]' direction='DESC' using='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' data-class='subtotal' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' value='n#,##0,,M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:markets_name:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f1ce63' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:markets_name:nk]</rows>
        <cols>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Revenue by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Normalised amount' datatype='real' name='[Calculation_985725395562323968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='If [currency]== &apos;USD&apos; THEN [sales_amount]*73.25 ELSE&#13;&#10;[sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_985725395562323968]' derivation='Sum' name='[sum:Calculation_985725395562323968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' value='center' />
            <format attr='text-format' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]</rows>
        <cols>([federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok] / [federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[mn:cy_date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sales quantity by market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:markets_name:nk]' direction='DESC' using='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:sales_qty:qk]' />
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:sales_qty:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:sales_qty:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:markets_name:nk]</rows>
        <cols>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:sales_qty:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Top 5 customer'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Normalised amount' datatype='real' name='[Calculation_985725395562323968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='If [currency]== &apos;USD&apos; THEN [sales_amount]*73.25 ELSE&#13;&#10;[sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_985725395562323968]' derivation='Sum' name='[sum:Calculation_985725395562323968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]' context='true'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_985725395562323968])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:custmer_name:nk]' direction='DESC' using='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:custmer_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:custmer_name:nk]' value='152' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#ffffff' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:custmer_name:nk]</rows>
        <cols>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 product'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Normalised amount' datatype='real' name='[Calculation_985725395562323968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='If [currency]== &apos;USD&apos; THEN [sales_amount]*73.25 ELSE&#13;&#10;[sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_985725395562323968]' derivation='Sum' name='[sum:Calculation_985725395562323968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]' context='true'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_985725395562323968])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Prod001&quot;' function='range' level='[none:product_code (products):nk]' to='&quot;Prod279&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:product_code (products):nk]' direction='DESC' using='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:product_code (products):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-align' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' value='center' />
            <format attr='text-format' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:product_code (products):nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:product_code (products):nk]</rows>
        <cols>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o' />
          </datasources>
          <datasource-dependencies datasource='federated.0cb0ip20p5bdpb15ya4ql0qzaa9o'>
            <column caption='Blank' datatype='string' name='[Calculation_985725395572977665]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_985725395572977665]' derivation='None' name='[none:Calculation_985725395572977665:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_985725395572977665]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Custmer Name)]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Product Code (Products))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='width' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok]' value='center' />
            <format attr='font-size' field='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:Calculation_985725395572977665:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='8802' id='1' name='year' w='30269' x='30532' y='-489' />
        <zone h='8313' id='2' name='Month' show-title='false' w='47866' x='22981' y='8924' />
        <zone h='14425' id='3' name='Revenue' show-title='false' w='20552' x='1970' y='15159' />
        <zone h='12958' id='4' name='Quantity' show-title='false' w='18450' x='23244' y='15526' />
        <zone h='70660' id='5' name='Revenue by market' w='21930' x='3020' y='28851' />
        <zone h='71638' id='6' name='Sales quantity by market' w='24754' x='25148' y='28851' />
        <zone h='33252' id='7' name='Revenue by year' w='49836' x='49902' y='13814' />
        <zone h='12225' id='8' name='Revenue by year' pane-specification-id='0' param='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' type='color' w='12541' x='86277' y='11614' />
        <zone h='47311' id='9' name='Top 5 customer' w='24032' x='51412' y='52567' />
        <zone h='44499' id='10' name='Top 5 product' w='22850' x='76888' y='54156' />
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='166'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7919FE6A-AA92-498B-A73C-508871CE8CDE}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CC9ACEC1-509E-4820-B491-ABA7653C6312}' />
    </window>
    <window class='worksheet' name='Revenue by market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96B2C67B-7CF6-41FB-81BB-3C7A8551D1D3}' />
    </window>
    <window class='worksheet' name='Sales quantity by market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BED95D5B-4FC1-479C-AA22-6A799016E97B}' />
    </window>
    <window class='worksheet' name='Top 5 customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9896EF9-F317-44A7-B5FA-B67E47397E5F}' />
    </window>
    <window class='worksheet' name='Top 5 product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:product_code (products):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4784A384-805D-403B-8234-9A6C05289403}' />
    </window>
    <window class='worksheet' name='Revenue by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[sum:Calculation_985725395562323968:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBA08447-4D65-4123-946B-436E8568567C}' />
    </window>
    <window class='worksheet' name='year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:Calculation_985725395572977665:nk]</field>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77644D78-AE1A-4301-97E2-46D52040427E}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[none:Calculation_985725395572977665:nk]</field>
            <field>[federated.0cb0ip20p5bdpb15ya4ql0qzaa9o].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{052D3785-5CDD-402A-BD35-91E657C16BD7}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by market'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Revenue by year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales quantity by market' />
        <viewpoint name='Top 5 customer' />
        <viewpoint name='Top 5 product' />
        <viewpoint name='year' />
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{88B50875-55B0-4FAE-9588-FD94E33BB8C3}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A8C88227-C1DA-4706-B381-60BA1201B0E6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='30' name='Month' width='192'>
      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
      O8sISQ8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='104' name='Quantity' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='102' name='Revenue' width='192'>
      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
      19H7SeXIiwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue by market' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales quantity by market' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d3RcWX7n93nvVUIFoAAUQiFn5hyb7GZPT2t6NBppZuSZnbyakSzrWCsd
      +6xt2T7HPj6SLGvXax9LZ3dlW1rt8dkdjVaa0NM9uafZ090MIAmCAUTOGVUooHJ+0X8ABDuQ
      TXYTLICo9/mLLNx6995X7/tu+P3u7ycYhmFgYlKkiFvdABOTrcQUgElRYwrApKgxBWBS1JgC
      MClqTAGYFDWmAEyKGlMAJkWNKQCToqZoBGAYBrquF6w+XdcLWp+maRTSqK9pWsHqgrXf70nU
      adn0K25TDMNAz2Qo1COiaxqCIGCIhXnHaKoKkgSCUJD6VEUBq7UgdQFwVwCWzX1ki0YAAKH/
      7c9Rp2e2uhkm24iCTYFyqRgzMzMsBlfR7ztUy8xML5BLRQiGEhufGlqeeDJ7939EQiHymg4Y
      JJMJDAMMXWMluMhCIISq66wGF5mZmSEUSRTsjW/ydFIwASzNjJBURLKxAJeu9aEboKkyyWQK
      TdcBjeXlVeRsknAkQTKZRNF0DAx0/e5jrDN0/TK3R+YxMOi7eQPNMBi5dZXFaBYtmyarZBke
      nMRmszI/cpOpYOKDmmVS5BRsCiRIFqpq/NSWNpHrvcRqIsP47Su4ysrJaHbOHGtbL6kxPT6B
      nveSUEs4dcDH1HiaY8dbAXBUNCJll0jk6taKywkCGQcfP9ax/n0Zm9NDXV09LjHHTDwJtaWF
      6qbJU8aW7ALZHXZSiSDJjAWPp4xYYIH8xl8l2nbv48Cho1jU+H2/39XRwtjY9Np/NAWs9nf9
      PR6a5/zPf0rv+Aqdrf4n1g+Tp5+CC0BVsgRX0/jKyrBYweVyceDQwfsMRQ/ezXB4a3HKISJZ
      HRxlSKllUnkVTVXQdIOy6kbOnDqGoCnoRuG2Ik2ePgomAGeJk5G+Hnpv9tN1+ASlnnI6GiuY
      mpomkswgIOHzlWO1uyjzOADw+XwIooOKStf6VQQqfBUICHTt3YfDZkMQrJw4foCBmz30XO8j
      Jev4fOU4y2s4fbiLiYmZQnXR5ClEKJYjkbquE/yf/mdzG9TkXRSVAJLn38CI339dsdkYug6C
      gFAgw5Su64iCUDBDmK5piJJUkLoAMAx0w0DcZMNiUQnAMAykAv1oqqoiiuKm/2AfVJ8kSQUT
      nKIoWAtoCb7rCmHZZEtw0fgCmZjcj6JyhVj5P/5PtPmFwlRmGOsbWYV5IxuGsT77KWR9halr
      vca1W7rJdW57ARi6DqIIhoHxkDlgPBrG5vJSYlub5hiGjoGwNjcG9HgcLRwuSLuLAcMw0AwD
      A7Csr3eMu3P1d65/1svp6+WAd30PwABEATSDte8WqA/bXgBj165T/cwpjKVxxlclTh1qf2DZ
      UGAeb4N7QwD5ZIy04KRyfVvVZHNZTIS5EUujagplnkp+paocRc3yv/b08/Xjx9hlX3u8llNR
      usMJQEe0uTlbauVSOIGuK9gcXs45ZW4KVZyyy3xvKczXW5sK1odtLwAAPZ9kcCLMqWdPszo/
      xuB0CHSNfceeQYtMMTK7gsNTSbmY5fbN6ziMLLW7T+EjRkwXTQE8IepLK6kvrSSciXMhksEw
      yng7EOI5f8273uA+l5fPustR1BzfWVim0tXM51xeotkEr6+kwCmAoXM+EOSl+paCvf3hKRCA
      oWW49IvXaTv0MeySwe25FZ45exYju8qt0XG0bISzzz2LRRAYH7rFoaN7qXKn6Lm2TGWTgaoV
      xSbXliAIOm/PzTOYTPNCayeBRBibsxxnOvaucpIgEExG+Ukwwq+3tCJgcC2wyK1YghMNrWBE
      uTA3TktZNdXWAm6t8hQIQJCcnPv0swy+eYFY1XPA2nwRXQdBXJvfG2wsOAu4DixyDAxD5Pmm
      Fs4ZGt+ansVnKEQFK0uRMBWGhabmehwChNNRXg+n+UZnBxZhbe1wqq6RU36d/zg1RafPybnm
      XQjxOYbSpexzF27E3vYCsJc4kUQrx08e5NbgGLvb67h6+TICcPDEafSoncuXLuH0VlHtciBJ
      AmDB6bQjWQzsYmHfKMXE0EqA4XQeEYNd3ipOVngQgAGHA4+vmlQixAW5hHI5Sk6FV2amqHB7
      aRIVbicyCBi0lPkQJRkXAkfrmnhlbolOVzO2Ar3EisoQZrpCmLyXbT8CbCb2PXuwVlYWpK67
      75VC7ZUb+vq+fIHenLpuIIoFnGsa67aHTa6zqEYA0xVi8zBdIUxMdgBFNQWKfevbaKHlwlRm
      rG9NFWiWYBjG2h5YoerTN3868sEVgsHmuF9U/PY3sVRVAU+5AHQ5S9aw4bI/2rQmPzpiLoJN
      0L/8pY1/b7EAEnz3W7/gVz7/OcqdFpYmB+geDfGFX/v4I307H55iXG7kcPP9D71n42HSghNf
      aclmNnpboesqF5YWWVV1NEPi0431XA3MElchj4XPtzRhF9ZCx1wOLBJUNBRd4NONft5aWEQG
      5uIxPrPnMPPRIC/U+OkLLeLwVLPLadvq7j1xtlgAGhVuN/PBVcrbagmsxHHZDXQ9wcRYiq7d
      NdzpG+JgRy2vXx/FbdVRDSsWUcXla6HTA5PDt0nNGtS276e5wsrtvgFyeYWuI6dxKjlyxk7/
      EUVO+htwShKXFiZZVuHFhlYEQeDt6TFCKjRaAUHgSE0dLouFm0tTzCoSn2ltQ9cV/m5aoM0u
      MqQopPNJhnMiX6wuYNS3LWTLF8HumkYyoQUMNYksleGQBDBk4vEsYBCJREDN4axq5tTJk1js
      Vk4/c4pseG0u37r7IGfPPsPS5CiS3U1LcxP+Oi+jAxMo+TTprLq1HXzCiKJIiShwdXGWkOCm
      1S6ykorxrdFhZkU39euvOEEQcUkSvYE5JtQS9pasTRunoyHaK6oRgZVUjH87NsenGv0bHrQ7
      nS0XAIKVqhKDwf4R/J27HlhMXLfoiqL0rv1uURBBFBEFg8DMEAuRHJ5SLyI7+8G/i2HovDY7
      ieSq5HN11QhAlbucr3Z20SVlGVh/ARiGwRvzkyh2L59vrEUSBAxDozeW5ZjXCUCV28s3Wmr4
      ZWCloIF2t5KtFwDgb6qnbyJEU9na60oQnMRWRrh27TrLscyDvyhYmJvoo/viJTy1zdgsVqIr
      S8zMLaAWx+9HPp/mWizFfGyFV+YXWM1neHVmmh/OzTOZB79N5OXJKVJqjsvhGIFEmFfn51lV
      NBajISrLanC8421f6/HRYKToSeS2sFeFY4sNYWunfO4hwEY0TwPDELj7sn9nMUFg43vvtbje
      76SSIAg71hXCWD9Ycvf+iOv/vusfKAoCumFs3MN3lrvLe+9doa3Yhab2X/1LbE1rZw62eBEs
      3CeIgXDfv7232N2/3e9hfxCStxyjKvVRGvrhufukFeoZ2vCIfT9PxPb9AfU9MTapTuEd1mTT
      FeIJYbpCbC6mK4SJyRPgqbYEf1hS59/AiMUeXnATMANjPRqOfftw7N+3CS36aBSVANJvvbXj
      FsFPPaK4pQLYHlMgNccvz79BWjVAyzM4PLHVLSo4mq5ydWmOK9EkAKlcmh/NTvP9mRmW8vds
      Grqu0Rtc4EI49q7P/nF4hCVVI5aOMJnT0HWFN5eXzQw5D2F7jAC6htUhcufOGKcPNhIKRdi3
      S2FkcIBoWqZjz0F8biuTY4OEkzI+fyMNpQJDsyFymSyde/fjVMJkHPVU2PLMBCJ47SKyrrIU
      znF0f+dW9/ChxHI5qp0ljMprD/uNlSUO1bZRJ+X47lyQr7Q1AJDI5yh3OFnOKevfNBhZCZDS
      JdKagShnCVs9hMIL+Er95vHoh7A9BABYXFWU6jGi2dr1TwTqWjppQqZ3cIhdNXbSlipOHCvj
      Ws8YNU12stZKThxyceXmIPtrdSJldZSLeeYCywhOhZGwwbOnjm5pvx6VSqcbt6gzrqylAu0s
      K+f1+Wks6Byobtwo5y1x4ZIExvJpALL5DBOqhYOuNZ8nXdd5a3ac5rIqvmiGg3ko22MKtE7X
      7jbGRiYByMVD3Lzdx/DoJKmsTDqdwu+vRZQkRAEQBDxuF9aSUqzSfdweJAdHjhzCU/J0OsON
      RxOcrW/iN+r9jMQjDyz385kp0qpCbyzKrXAEVRB5vqEFJZcgbYaEeSjbZgQAsLp8VEiD3EpZ
      UHJZbC4v5S4IJhNUVFYxMNRPukIimdfB0AkFFplIzWAr9WMvSbM8P4UhxUjnAM/TFQ0inssw
      m0iwkNaZdTqQRFhIJkgJCiASSkRYFp20WA1mE3EWUzmmXS4+0bYLWTe4peSpKPVgUSIIko1f
      q63gRwsBvthUh2TOgx7I9hCAxcGBXe2AQPuBU1Q0y3gqPOwSl9GtTp5vsOIssbNXWiGvZXHa
      AQQsFglnRTWtVZVIgkEXS0iOKurabdhEAdFmf0jF2wfdMBCtTk551+JjnmloYT6ZIIeDz/tc
      KKqMDQuGlgeLndMVdnQDnFYbbuB0YxOS1YqkV1EmSLgkLy9Zdu45iM1iewhAlHA7134syVqC
      r3Lt35U19xLcZRMrjE9Oo6gauw6fQFJWaGmqoM7nXC8hUFPXUOiWbxrlJS7KS1zv+qy51Lvx
      b8lqxwFgdbLf4eS9uOzrUz3Rxl37bKXDXAM8jKJyhdBzuYItejRNQxAE0xXiIQhWK8IjXOdJ
      uUJsjxGgQAh2e8HS+ugF9gUSVRWxgAIQFQWxgL5AT4qiEkB+YBCyH3C+YBPR110hCnWyStN0
      RFF8bE8Ix/4DiG7XwwvuEIpKALF/+AfTFeIh1P75n2Fzt211MwrGpo/Phq7Q33tjYw/69p07
      j3W9vjt97/ssujTD3PLDsz1m48uMTQceq/4Pi6ZrTESWmcmt2SZW03F+PDvDLwIhsvq95ZZu
      6ExHV5jIyhv/n4mtMp5eO4kVTCdIagaGrtEXjZouDU+ITRdALr5CMr3KyMQKAJlshsDsOP3D
      k2gGRMIhZsaHGJlaYHlugoHRaTQDtHySWzdusJrIApBNrHLzxg1mAquAzsLUCL03+0jLGpoq
      E1qc5cbtQfKqjq7JjA7c5s7wBKq+lkppZmyAvv4R0nnlA1q7+Swm4yynE0zm1iy6iiDxUmMz
      uxwaF1bu+e8Ek3EW00mmsmvtC6USTKeSLGTXBLCYipPQdC4vzGC1u02XhifEpgsguLhE25Fz
      yJFpdAP0TJy8tZwyIclsMM7onV6sFY1k5+4QMsqw5VdZjsS5eKmHjr17GL3ZQ0bOcLV3mD37
      9+N12sDQcHhq2d/VwM2bdwAV2XCwq7mSS1dvoqsyVY2d1Dvz9E8tM32nh7y7jl1tDRQyeBlA
      U1kFh8ruPbB+h4OB1RDXo1k6S90b5epKyznq9Wz8ALUeL8fLyzaMVrqu0hOYJ2rzsqekqGaq
      BWVz76yhMTo5gychs7gQYN+RY0hOLy11PsJalKiqYneXU+31kC+twFNbRS6/jJrPEolF6L91
      m0QyQmx5EWf9bkrsduw2K3o+w8jIAJIEsRQYdS6qa3y4yytwGBOkEhH6R+awqiny3hLyeY3T
      dRWkI1nEpLapXfzQCAKVDgcZJc9yLkdbyaPtnAiIlNmshNXiiG6xVWzqCJCPLVDV9Qxnz5zh
      V5/Zy3Tg0Q6fiFY7vqpajp48zYkTJ/BWVpNanETOZwhHk2SjS9iq29nf1YIkrB3vVlWNVHge
      1VpKbGmB5v3Haa2rRBDAJSgsxbLEVkPI+mb28ENi6AzHkvg9pbS7Swjkciwm4kTVhzdKEEV2
      VdbQJWW5FC3MzlUxsqkjgIqbrta1MIWe+jaqQ2mktrUdBXdFDVbslJe0I4lQ1dyG1QLOmnpw
      eDh9/AB9vT2U+ZupLCnl6L467gxOcODgAZy11fhi/cxFyzh+eBcet43QyARjSRdnTx5A0PIM
      3rmDt7aBvdWlVJU1MdR3C2tZNW01FZvZxYcysLLESCqHwSLXjSrabCI/n5uhtKSU36itYDkR
      xwBGwkEGEhkMklwxfFQJWW7H0xjAJWB3aQUlkkhdbTNjiTi6QcGnc8VAUVmCd2JYlM2m9s//
      DFvbw7dBd8qh+KISgDw9A3K+MPVpOoIgFCyEuKZpSKL42GeCbS0tiCUPd6IzBfCUYYZF2Vx2
      igCKan9NC4fRtcLsCumahi6Ijz0CiCUlSF7vwwuafCSKSgCrf/GXT90awPnsWXx/+Adb3Ywd
      y7Y6EplNhBkcGGBwaIRERkbJxJhdCn3k66UiAQKrjxcK0TAMAskYl0IrJN6zfWnoGhPJe9df
      SsboXlklpxtgaIRya24OkWyGpLaV+7EmD2JbCWB5YR67t5p6fyXXLl8mn88RiUYJBQOkcwpg
      kE3FCYZWUDUdXcmTSCQILodQNB1D14ishgiGwugGyNkkiczjuUKkM2HeiuVpc9l5ZW5243NN
      l3l9fpGfL68JNJpY4Upcpt4G35ldxNDyXA0n0LQ8P18MYtmhgWafdraVABAErDYbaDIWuxNB
      gMXZaZKZNL03+1DSYa70DpCMLtNza5j86gQXbo2TjC1z7cYQaj5DJBonHppkYHxzkuEJgoAB
      OEQR6zsWtJJo46XmJmpta7PI5VSGtnIvTaWVWPQsKqBqKr+cW+TZpiZKzE38bcn2EoCuMDk6
      wsTsMqWlLjCgsa2L9rYObJJGdHGSxn0n6Ny1Hz0bQQcaWjrp3LUfm5FE1RSi4VXCiSyroeDm
      tEm0YlOzdK+EcdsefMSwq8bPfGiBV+cWWMgrYMBCIsJYTqHC8nQd0C8mtpcARBt7Dhzi2JGD
      ZKIB8u8J6+EsLSe8HESV0yiGhMia+7GSTSDrNgJzM1S37efgvk5sm9SzhcgK1RW1fKqhgVAq
      jmJohHLvtyWIgsQLjc180l9Jq6sUSYCW8mp+u9XPy7MLKMWx2/zUsa12gUrL3AwO3GRGkqhp
      3Y/H5cKnrR32rq2txVXdQFV0gOs3g+w9eAiyM8yO9qOuONl7YD8uIcudgUGSZV78fh92l5Vy
      4/EiQ3TWNrEcCPJKVONkTT1WXWUgmuC5ShevLgaJKQo/mF3gE/U19AQDpA2Rj9X5EUWNNpcD
      p8PN2bI8K7JGnX1b3W4TnnJDWDYwyOgHpEl9J0+rK8SjboOahrCPxlP9SnLU7ObAh5jFeX79
      05AsTIYYXdfX0jsJjzcXs/j9Dy9k8pF5qkeAD4PpCrG57JQRYHstgk1MCsxTPQX6sIT+5E9R
      Z2YfXvA+WGpr8P+r/32TW2Sy1TxBAejIsobNZgVDI6/o2G33HzLz6ShJxYHP+2ixLDPxCHmx
      hHLPB5dXskliWYOqirVFsi4rRJMJdES8NutGzB7DMIjl8yBKeK0WdEMnJssIgoTXZkXTdZAV
      DMMgncngcroKlYnI5AnzBKdAKW7dWM/0kl+l+/r4A0vmkmFCH+LYXya+SjiefWg5OZsg+I5I
      DIOrAXrDUa4GFrgcvbcYvh6c52okwqXFOW4ms0zHI/THYlwNLnA5mmRoNcRCXiUy1cPLv7hl
      hijZQRR0CjRx4xK2jpPUSTGujoTp9MHwXBgjH8fXcZrpwV5mwll03crzzx+h+/wFcprG4TNn
      WRoZJJ3PY69sosWtMtZ/m6UJA3dNB/ubPdy4NUw+l6H5wCkqtVWujy1gUbO46/Zs1L/P52d3
      Ks9cNMigcu+weTCvcKq+HjW1Qn9e4ajPRzsGo6tBltbdp9VsjJd/OcE3fver5tHEHcQTXQQH
      Z0fp7u6mu+cWOU2nsauT+bFxgksB6hv9zCwleO65sxw9sAsJmFpa5cC+fdTa4szHDbJ5nXMv
      foIqdwlerwdRkggsLGJgoevAYc597ONkVubA4qDU7cAmqswurTI8E+Bj585x/Mj+91iEDa4v
      zXEtpfOC756P/V6Pk5/PTvP6aoIOdwmCoPHz6Wm6oymaXS7QFV4dGMHbuhebOffZUTxRAdQ2
      7+LMmTOcOXkEhyRid1dhURMshjPU+TwYxrtdhHU5R2glhFTZTJXDwOurwmGVyCxPsKx5OX36
      FL53pv0xVDRDZHG4j5L6vZw+fhibRcTQjftOU+4E50navXyhoQ7Hxmtcpzua5Lc6Ovh6k58r
      oQiGIfGptnZ+q7WRK6srIFr5/PHjiPNXGV81IzTsJJ7gFEiitHQ9jr1ow1vmAkGks8bJ9RUr
      NklkV2s1Fy9exiqo+DuqOHRwL6MzK4gi1LW0U1rqAaCkog55/DY9iTk0yY3NWUJgcIilSZXO
      gyfxaKvcGOwlbDVwVHWya3cLF9+6gN0KFY27N1o0nc2QS6zy/cQqHZW12NLLaKWNPFdRxj9O
      TYFh8GxdAzeCi8zmFAzgZHUdkpzCIVn5za99le/94HVa/8lnsJjzoB1BQQ1hmpyj/+Z1/PtO
      UeMpbO6ux3WFsPhrqfuL/+uRy5uGsM1lR7hC6KqMr3Uv1e6tSVxXcuwYekvLR/quVFa2uY0x
      2RaYrhBPCHME2FxMVwgTkydAUblCRP76b9ACj54voOq/+edI5eVPsEUmW83WC8DQCczPEM3o
      tHe0MT8zQUdH16ZcOp+KkxUceF1rh2KU+fkPtQg2lMLmFjApPFs+BRrv7yGUFfFXeUhnFcKr
      K0RXQ0TiKQxAyWcIBJaR1xNhpFIpgsEgWVlFV3Kk0mmCwSA5WVuLCrGyvBEVQrRYsEr3ujge
      CfH96Wn+fmKcvuQ9V4p4NsWPJoZ4dTUNGIyuLPEPU1P83//+P7AQzXHr4i+ZWU2TXpngW989
      j14Uq6biYMsFsBjOcKCrhfLKGio8duKrAZajSQb6bpJOp7nS3UMmHePajX7kxCLn375JJhXl
      5u0R8quTnL86QDoZ5Wb/yFpUiHiCxMoUA+PLJMOLLITu+fw0lFXy+dZWPlVbwXQqvfG5JFn5
      ZF3N+rldncGEzBdbW/nSiwe52N2LKsuoSpqXf/AWv/YbL5iuEDuILReAIbw7nmtZVT27O9vx
      lbtJRIPE03lS6RyxxXkyhkBz+y7aOjqw6GuphFo69tDe1oqoKei6QnR1ldV45r5RIUokiZlo
      iFeXE3ys6l7YdLfNjm2jDSI+m85PFxe5MbZAKB4FJcHf/fW/xd11ikqHGeFhJ7HlAvBYDAKR
      NLqaJye/OxuK1e6itLyctvZ2Tp05if0hb97F2XtRIaz36dlMOEBvxuCrbS14LQ/qusBzDa08
      X11NV2M1LbV+sJbytd/7A+Ij3YTS5rpgJ7HlAjh0/BSr00P03OgjLevU1q6dga3wVeMu89FZ
      V0Z/fz/hVB6rvZSqcicgUltbg8VVSVWpDQSJ2toq6ptbCU0PMhNIUuf34XCXU+65FxXi7VAI
      VU7zw5lpbicyDAWm6U+rjIaX+d58gL7lBbrDcebiYV5bWuTNOwGePX0YyWrFYnPxpS/9Kq9+
      54eo5iJgx1BUhrAP6wpR96//Ekt19UeqzzSEbS47whViq7HW13+4zO2Wwv3AJltDUY0ApivE
      5rFTRoAtXwOYmGwlRTUFSvzwRxjh8AeWEZ0uvF/9coFaZLLVbHsBKHKOdCaHw+nCbrPyqAO8
      ripoSFjfsd2Z7el56CJYqig3BVBEbOspkJqLc+XKdRYXFxgemuDD5EyPzg8wMv/uRN2yKvPT
      qVGuJXLv+jyUjPCd6Sn+cXqGZVlDzcb5wX/8K964vRZDaPTWdZZiWbRchFd+9KbpCrGD2NYj
      gCbnkHWJ9q492C0iai7GzZEgRw/v5q233+Rjp/bws7dGECWds6ePcad/ACWfo67zEPGpSabS
      q0j6Xva21wMQzcsc95Vz5z3pis6HIny+rZ18OsJbkTh1oTDPnDnBtZU1oSQiYSx1OV75wXc5
      9pvfNF0hdhDbWgB2TzVHdufo7X4bS1kdR3bXcHfPyjAMMAxU0cmnXjyBqMuUu0sIK1kWAkEO
      trVjp5m9rfdcHmpcbhKiAO9JFHm63MW3JybB0PjE4WZqm9vILsTZmG8pCf7+b/+Kvac/TYv3
      8cKtm2wvtvUUyMCgvKaJs+dewJZcICGvf24Y3N29raquwSIKLPT3YW3o4vSJYzht4kZqo4fv
      8hrciaf4zZZWPlvnoy+SeH8Raylf+MpXWR7pI18cu8ZFw7YeAZRsnN7efrBI2MubqXS5mU7f
      4tq1GDIOkGyUutc0XNVSz7U7twhbRawV9Xj9jQxcvcGI0cmetrUp0GIyxlA4woiaodFShZSL
      oLtrcYkCN1dX0OUMrsZqFiYHGbhxnf4VB81la2FYbO5qvvbZw/x/f/dT/ouv/xqSGR9oR1BU
      hrDxP/ojImNr4RpLrDZcogGiFatgEM7lQLRQXVuD91/8CdHEWvwfh8tLmcuKaLVjEQVSySQu
      j+ehFmXTELa5mK4Qm4DH4aSk9P7ZZKrcaz+mKEl4vD48D0jO7nnA902eTopqBDBdITaPnTIC
      bOtFsInJk6aopkDZnusYqXfnCLPv2oWtqXGLWmSy1RSVABI//OH7XCHKv/kNUwBFzDaaAmW5
      2TuAoav0XHyblLL5SxNN17gTWmQ4Lb/r83xyhR985+955bUL5FUdXc1z+9Jr3JhYO1c8Pz5K
      OJVHVzJcvNxrukLsILbVCKCoKksT/ZTU7cIt5rh5rY+snMfXvBe/I8P1/mlK7AKl/l20eVK8
      PRDELanUtO2jVlgm5t5DvSPD7YlFap0S0VSCSN7BuRP7AAilU2i6ynJeZY/rXnzS1155hX2/
      +lXUkfNc6Jtmv1cmL2dZCsU41lFLcG6aijI//ed/gOfgr5uuEDuIbTQCQGB6hJ7xMPvaa0Fy
      0NTox+32MDU1gaooNHbs58yz50itTKOrCg2dB3ju3LOszE+i5tPkVMDQSKYzyOkIcaOM59Yf
      fgC/p4xdbuf78nstKwpdVS52793L+Nwi/vY9HOxqRrz7pKspfvb9b7Ns7eJYW2XhbojJE2db
      CcDfupsTHRXcGVsiuTTBRFiho7MDl8PCPccc4V0PsGHw/q0/A5ActLfUP5L7tChI6ICqqVgt
      99kmlZwcPX6EeGgJ1Zz+7Ci21RTIYrFQ37mH4OW3ibs7Sa9MMJBeIataEEURadTdVboAABPW
      SURBVH1P3WKxgK4xcucGsWkRf9sBXK4U13ovEXYY5MUyRMnyPmttTlWJKwppRSat2kmko2Rk
      nb0+D2/emoDpXo4efIlcJkUkFicVV0iksiCI1DTvo0ZK8L3XevjSJ08UbL/d5Mny1BrCUkvD
      TGt1HGh8tLj9uq5z9Q9/n5H+EQCq3WU0Wg28v/cHNH3qRW5evYhQ0caRPS3MDt+gf2IJgKrG
      PexuKMXqqcBpE5mZmqGptRXpIQsB0xC2uZiuEO/BVlZLnf5oeYXv0lJWSUN9/bs+K7cICJKV
      Y2c/fq/cnmO07Dl232u0trd9+MaabFue2hHgw6LrOspyCFF797ky0etFcrs3vT5zBNhczBFg
      E7BUVxXMF8jk6aCoBKDMz6PKa0Ywa1MTosPxkG+Y7HQ+sgBUWUaw2pAeMOIqsoxktX64SGz3
      xUDOK1jttkeOCPEgIn/9NxuuELX/8s+xfcSEeSY7h0eeoPZc/iXd3d28/dZbBOM5ZgduEpUf
      XH5k6DYZWX9wgUfGoP9m33uP8X60KxkG1wLz9EaT7/mDztD1t/neq6+RyK1Ff44sTjAVWIsq
      EQ4ukcwpGIbO8Mio6Qqxg3jkEUCzuDhz8iR6cp63hxdoEGXGBm8zmsux79BRksEFatrb0BLL
      hJJWdDnLwO0baIbAkaPHyIXnGJtZwuKu5Oj+Lkb7b5BTDBShhCOH97EyM8pMMIK/ZTfNPjs3
      bvahinYOHDxAPh2j7+Z1ZNXG8eO7mJ5YprPNT3fPDU6dPs3S5DhVLU2M3O4jqxp07D2IkA6T
      lfME4yonD60ly744N4W7tJpcbInrq1nOtqz1bfjyT5mzdvCp56uQVY3F0UGuXOtGaP84bX4v
      U4N3qDhwlpnhXxB0HmX3g2+TyVPGI48AqfAS3Ve6ef3yMHv3NiIIIvWtuzjSUcVUIEx4ZQUN
      kLMJwtE0gmSla99hDnX46B+axuWtorNrF2poiaisEYkn2HPgCGXWHKurq4wHkpw+dZLAxBCp
      yCwZh5+D+/fisIpIVge79h+hoSRJMGVnNTRPJhMhG44RSudZCIVxSFZa2ztpb/AxOjFNKrzE
      6GKCg3s6NvoQ0AQOuOwcqKhgdPxesrxLd8ZgZYgfvXEFQxCo33WYT3/8GSx353eGwtRQL7cC
      Ll480fo+VwqTp5dHFoC7so5nnjnDmZO7mRieRBAtuJwlWCyW+0ZeECQLNquEw1OOLqcZunOD
      YGiFfDaPYhhYbCU4bBYkiwVFzhIJznP1Wg+yBhbfLhpL0ty63sNyLIvF5sBhs2C1Sui6QLlL
      YmYqwN7TB1gcGUVy+UgvT3FnYp5YIo2sqCA5OLB/Dw7bvUFOWF9FCIKA9o7YQFk5x6kXPs0n
      j9by8o+vvr/zusrC3CyG1Y5gTn92FI8sgFwywujoKJPT89hd7983LysRGRwYYnB4HAUQNJnJ
      8VFuXLtFfUcnqqphGDq53PsXDnZXOf6aSsrKvVT6qtBSqyRlAWeJDVl+f0aWmiof/XNh/FX1
      RBaHqK6tRlPV9aR62QcmsKgUDaZzCpPxOF2ddUQD00TSKkea6hgLJNANsNrvMyuUSjj3q59n
      j3uZ8zcnH/WWmTwFPLIhLJOKk5M1RIuNUo8LXZERrHZEXUXRBaySQTyexOZwYLFYEQyVdCaL
      xVaC2+lAlXOkMnkcDgdWuw1VlrHb7aiKjCBZQZNJpDLYS1yU2C2kEgkM0YrH7USR13aBdCWP
      IdmRUMnkFFzOErKZNDaHE0mAZCK+Fr3BYkESDATJuuGyoOs6C//j/8Abl7uR7G6+8O//mpXE
      PHr9SZpKNS6cf42w6uaTL73A4mA3V26PktcE2vedYl+dk5LqRrwlcP1aH0dPHcdiukLsCENY
      UVmC35kh5klvg5oC2FxMS/AmUPbFL0JmLT2qxefb4taYbAeKSgCOgwdMVwiTd7GtDsQ8aQxF
      wVDMNKcm9ygqAYT+5E9Z+Yu/3OpmmGwjtrEAcvRcuMiV7iv0j06jvWdrU1PyTM3OfagrGobB
      wkqI+WCEd15NziQZHR5kcnYJbX1PYDUwx/DoBDlFI5NKklc1DMNgdTVMcWwbFAfbWAAyhrWS
      08+cQorOs5TIMj8xzJWr1wkncyxNj3DhwkVu9A2TSceYnZmh51oPK4kshiYzcPs6vbcGyCn3
      DF4DwQX6Ulm6X/seQ+/IHjM5OkQ0nWX8+nnO35wiNHKFn10eIhWLEk5kGLx2mYVIlsDwBc5f
      n96Km2HyhNjGArhHXtGwCAaeqgZOHtvPwJ0+/E3ttHV2cuzQHrTUCuMLSY4c2c3Y4ChoKg2d
      B9lV52ZwYnbjOoNZhU+3NvNrL57mztDQxud7jpzi5JFDeBwWLJLIL3r66aq1Ecvq+LxrRj85
      tcxPrwT5wqeOm64QO4htvQu0PDvGVRL42w/gs2n09N5ClKyE35PjC0Gk1u/HanNgETRSkRC3
      xhewallUT8O9YuuuEFabg4wc2fhczSf44Xe/w0pW5LlDLoYCC1S+8FkqV0b49o8vcMCe4Hv/
      6T/RdfyT2/uGmXxotvUIUNPcxTPPnKalzoeSTSK5fHS2NiCtG5i0fI5kKv0+9+RYcBl/514a
      qivedYagBJ2YZhBcmKeh2o+SyyCrOrIq8bmv/ud88zef5fKlAZrrGpDcZTS2tKLkkmAt5au/
      +4d4In30zUcLeg9Mnizb2BKsEo1mKS/3rP3XMAjMT5E2SigvLaGy3Et0eZFQUqOlwYesWfG4
      LESjSbxlTiZGx3BV1OAsceAtdaPrOlP/3T/nZwtBKr/4dT732V9n+vLLaB2fJDf+NmPzEbDY
      ee5XPkWDW+Z7L/+EHFZe+ORvIAcncDftptqp8pOfXeZTv/6S6QqxQyzB21gAm8tdVwhLeTnV
      //0fPfH6TAFsLqYrxCbgeu45JJdzq5thso0oqhHAzBCzeeyUEWBbL4JNTJ40RSWA8F/9P1vd
      BJNtxhYJQGV15dG2EyeGhvmA4BMfCi0SeXghk6JiixbBeSYnFvBVlQMQTyQoKy0ll0pi2J3Y
      BYWZmXk8Pj+pRAINyCRjCDYXci5FIhrFXlZFdbmHXCrGwnIEf0MTFi2HbnHgEGSCcRl/ZSmx
      eAqvdy216ezKIt/9679FkGU++9Vv0lS5tiAOzQ7zxo+/T/7g1/jmc630XfopveMhNDnLkY99
      BhYHqDhwlip5hu9dDPDNL33CTJKxQ9gWU6Ch4WEAghOjBOIJrl/tweYqRcmvWXzlVJgb/eMI
      hsqlixcQ7E6G7/ShqimuXLuDy2nn2tUe8okgw9PLrEyNcn1gDDmXYOgdrhDXkll+//d+l699
      +iQ9t++5QpT6GvnCZ1/aWED2T87xn33pa/zmSyeZnZ4Gw0DLJ3j5J7184fMvmg//DmJbCOCd
      6Lk0mrOCBn8NdTU+dDnJ+dcvsevgIWySgM/fRIO/llK7lUx4AVfzXvz+eiokA6PST2Y1yFIG
      dlVZCQZDeCuqN65tIGEVwOUpI5K6FxzL4XJj3QhxZ3DuUBd/++/+Hd9++U32HTwISoK//9v/
      l9KuY5Rat90tM3kMtsevqWkomkp4NYxgK0FPx8kpGul0BtHm4aWXnmXw5k2U9wSas3mrSC7N
      oih5ooqKS3JSYsTJiyX4vR6Gx2ep8t87+mhBJ6dDLLJKbXnFAxqj8PPLY/y3/9Xv889+9ytc
      uPAmWEv5p//lf0129BIL8fyTuw8mBUf64z/+4z8ufLUC4cAsU7Nz5AwbLdVu7gyOU+qrpaq6
      hqZqD/13BsDuobzMRVllDRV2nZRuxeN0UOpxIwgC7vIayiw5Bken6dhzkFKnnRKrgej2UVPt
      JZmF1oZqBNb2kZ0X3uTVuSXG5+N88qWPM/bm37No7SQydomfnr9A/8gUVruXriqBH79xmb6B
      UY6cOoddS+GqaeLUkTZ++Oqb7D+w+6ExT3VdRxCEgu3L67qOKIoFra/Qx0sNw9h0u0pRGcKW
      //TP8P/x/1KQ+kxD2OZiGsI2AZuZ3cXkPRTVCGC6Qmwe5ghgYrIDMAVgUtQ8cQEYhk4osMDC
      wgLhWJLHnm8pSWYXTZcGk83hibtC6KrM4NAQ7Z27mei7gv/A8zR6reTyeaw2OxYRVE1HVRQk
      qw2rRULXVPJ5BcliwWq1oCoyqqZjtzsQtQyBUJYmfxk6IpKw9n1RMDAEEVVRsUgigsWCoOto
      hoFlfd4fnrnD99+4gWSx84Uvf4UK51r3w7MDfPfnVxAsDv7Jl79EYvoWF26OouTzHH3hM9gi
      k5R1HqbaEueV80N84XOmNXinUBBfIE+5j4Z6P9HFCQQBBm90k8ZBOq/z/IkOfvKzqzQ1+4kl
      8jx79gi9V65gd3tZWYnxwq88x8RwP1lFQbNVcbJr7YhkOji2lii7xuDitRkO1eW5NmfgcXuo
      UlNUPXMKe2yewTmFk4fXkmT85PUrfOP3/hmJ0ctc6h3iM+cOAvCz1y/zld/5PZSpK/yyd4SX
      Du/mn+47SXZ1kn+8cIv9XnDIOV7+/g859+XfMR/+HURB1gBLM6NcudZDSi/BbddZCEapra5C
      iq0SVnRqGjs4cuQIlSUQj4Zw+to4euQwvtISQMciSsiKxnIg8IH1lNe1c/b43gd2ShUcOEUo
      91WzHAtvfJ4VFMqsApXVNQRXIpSWlbEyN8x/+M4vePFjz4GS4O/+5t9ga3+GOnfhdj5MnjwF
      EUBdyy7OPnOGfY1uJuZiWKwCgijRvG8vpdI7miCAJFnJ57MYuoaiaiixOUJGJSeOH6XcaeOd
      hXXdQFVkNH3NR6KismLN+grouoEiy7zTe0KUNDQDMukkXqdr43Or6EDWDdKpBGWlLlYnevjO
      G4N85bd/l6ZKF1hL+fJv/Q6rw9dJvtcfw+Sp5sm7Qhg602MDLARWWE5oHNzXRYVTZHouQDan
      46+vQpYNKss95LIZKmobyK7OMTGzSDiWomPvXlanhgmGE1gdbuqqvWQUkapqLzPDd1iJJbG7
      yqktLwFHBR67QIkLbt8YJJFMU1pZS1W5G8MwcOVW+P4vrzE0NM3zL36C+e7vE7C20eVM8p1f
      XKF/aIoXX/wVXv323+CprmVuYpSM5IHkCq76XTyzu4xvff8yRw6ZrhCmK8QTQlfzTE3PIGCw
      uJrluWeOPHZ+YLhnCFMVGUQrNpsFXVVAtCAKIOdzIFqw2Syoch5ZWUvMarHZsYgCgigisGZw
      slgsD33QTEPY5lI0YVEMwyCViJLOqZRXVGK3bs5bxrQEby47RQDbLiyKIAh4yirwlG11S0yK
      AdMS/IQo1Jt4q9gp/SsqAeyUH+1+7OS+3eVJ9HHbrQFMTApJUY0AJibvxRSASVFTXAIwDBbG
      B7h48QJXbg1jGDAyOISKQXRuhLGl2MOv8QHMDF3nrYvddHf3kFJ0xgaHUIDk8gyDM8ub0wcg
      EV7i/I9/wmoewCA0O8zbFy7R3XMH1TAYGxlA1SERmmZ4KvjYHrjR5TnO/+w1YusRyoZ7u7nY
      3U13723yisbQ0AAAqwtjTD62p65BaH6cy5cvc+GttwlEs2RiQd5++wJvvtVNRtVZmRlgJQ1q
      NsqNvpHH6l9RCUDXZCaWopx99hyV6jKLKY1UMomSjXNzOkq7//H2XiOxPCfPnOHMmZO4rSKp
      ZBJdy3F9YJaOhqpN6gXkNYmO+gpkHdDz9E9FOHfuWfzOHHMraVLJJGo+yY3BRTpaah/bkKgK
      dlpqSlEMAINwTufZM2c4c/wwdqtEMplEzUbpn4zQXPegaBuPjquijjNnznL6RBcTI1MM9Q9z
      6PRZntlfxa2hReRskrymc6v3Fi3tbY/Vv+ISgJ5FsjgRBaio8BCOpsjElnn9tbfYf/Q40mPu
      Mrjcdm5fu8wbv7xAStaR0xFe++FP6Dh2Grtl8251VXXNPVcMOYfgcCEApWVu0vEU+VSY86+/
      SfvBI2xGGKOq6pqN9FJg4HVIXOm+zFsXr5JVNLKxZX72i4vsO3oEy2Nv1Ai4XC5SkQCXugfZ
      e6CLrCrgsks4Kn0oq6voqszNt3+C5ttDhdv28Et+AEUlAEGwASqGAblcHmeJA6e3hjOnDjA+
      NsHjbYgZdB04zpkzZznR5mZ4IY7NVcHzHzvN5ODgRvrVTcdiQdQ0DEDOqVgdNuzuSs6cOszM
      xORj9uk+GAL7jp3mzJmztHklFiMZSrw1PHtyL+Pj05tQn0EsMEHP4Dynzn2MSrcVmyig6gZG
      LofgdCJabBx+5gUygVHy6uM5JxaVACSLA7eU5+btW4yEoMVnB6DM30atNcbQbPghV/ggNO70
      XuNO/x1ujK/S7l+LR+oor6ezCvpGFzahBwA6sxMjTM4tMDE8wEpaxGfPcuNWHyOLMZpqvQB4
      fE20lSncmlh8zLzGGlOjg0zNLzA+NEAkFuPGjV76+/uZWElT7S0BoNzfQa0UY2hu5fG6Z8Ct
      W/14S0uYHh8hsBqnuamS61d7uXhlkF37WgEQbW5OHGjlSm//+3LEfRiKzg5g6CrpdBabw4nN
      KqEoCharFQwNWdGx2z66f4umKmSyOax2B3arFVW9e20dWdaw2zfDd8Ygk0qhrv/q9hIXNgnS
      6QxWRwl2qwVFkbFYbICOrKjYrLbHSO1qkE4m0dafEofTjWgoZLN5bCXOjfqsVtu6C7uO7THu
      IYZBLpfZcEa0rfcpl0ljSFZK7HZ0TQbRhiQa5PMyNpv9I/ev6ARgYvJOimoKZGLyXkwBmBQ1
      pgBMihpTACZFjSkAk6LGFIBJUWMKwKSoMQVgUtSYAjApakwBmBQ1pgBMihpTACZFjSkAk6Lm
      /wfupw6fVOVDCQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 customer' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 product' width='192'>
      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
      5v8DIYrVpHkK3o0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='29' name='year' width='192'>
      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
      UJP+sAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
